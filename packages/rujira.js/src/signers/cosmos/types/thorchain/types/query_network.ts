// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               unknown
// source: types/query_network.proto

import { BinaryReader, BinaryWriter } from "../../binary";
import { DeepPartial, Exact, isSet } from "../../helpers";

/* eslint-disable */

export const protobufPackage = "types";

export interface QueryNetworkRequest {
  height: string;
}

export interface QueryNetworkResponse {
  /** total amount of RUNE awarded to node operators */
  bondRewardRune: string;
  /** total bonded RUNE */
  totalBondUnits: string;
  /** effective security bond used to determine maximum pooled RUNE */
  effectiveSecurityBond: string;
  /** total reserve RUNE */
  totalReserve: string;
  /** Returns true if there exist RetiringVaults which have not finished migrating funds to new ActiveVaults */
  vaultsMigrating: boolean;
  /** Sum of the gas the network has spent to send outbounds */
  gasSpentRune: string;
  /** Sum of the gas withheld from users to cover outbound gas */
  gasWithheldRune: string;
  /** Current outbound fee multiplier, in basis points */
  outboundFeeMultiplier: string;
  /** the outbound transaction fee in rune, converted from the NativeOutboundFeeUSD mimir (after USD fees are enabled) */
  nativeOutboundFeeRune: string;
  /** the native transaction fee in rune, converted from the NativeTransactionFeeUSD mimir (after USD fees are enabled) */
  nativeTxFeeRune: string;
  /** the thorname register fee in rune, converted from the TNSRegisterFeeUSD mimir (after USD fees are enabled) */
  tnsRegisterFeeRune: string;
  /** the thorname fee per block in rune, converted from the TNSFeePerBlockUSD mimir (after USD fees are enabled) */
  tnsFeePerBlockRune: string;
  /** the rune price in tor */
  runePriceInTor: string;
  /** the tor price in rune */
  torPriceInRune: string;
}

function createBaseQueryNetworkRequest(): QueryNetworkRequest {
  return { height: "" };
}

export const QueryNetworkRequest = {
  encode(
    message: QueryNetworkRequest,
    writer: BinaryWriter = BinaryWriter.create()
  ): BinaryWriter {
    if (message.height !== "") {
      writer.uint32(10).string(message.height);
    }
    return writer;
  },

  decode(
    input: BinaryReader | Uint8Array,
    length?: number
  ): QueryNetworkRequest {
    const reader =
      input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseQueryNetworkRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.height = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): QueryNetworkRequest {
    return {
      height: isSet(object.height) ? globalThis.String(object.height) : "",
    };
  },

  toJSON(message: QueryNetworkRequest): unknown {
    const obj: any = {};
    if (message.height !== "") {
      obj.height = message.height;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<QueryNetworkRequest>, I>>(
    base?: I
  ): QueryNetworkRequest {
    return QueryNetworkRequest.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<QueryNetworkRequest>, I>>(
    object: I
  ): QueryNetworkRequest {
    const message = createBaseQueryNetworkRequest();
    message.height = object.height ?? "";
    return message;
  },
};

function createBaseQueryNetworkResponse(): QueryNetworkResponse {
  return {
    bondRewardRune: "",
    totalBondUnits: "",
    effectiveSecurityBond: "",
    totalReserve: "",
    vaultsMigrating: false,
    gasSpentRune: "",
    gasWithheldRune: "",
    outboundFeeMultiplier: "",
    nativeOutboundFeeRune: "",
    nativeTxFeeRune: "",
    tnsRegisterFeeRune: "",
    tnsFeePerBlockRune: "",
    runePriceInTor: "",
    torPriceInRune: "",
  };
}

export const QueryNetworkResponse = {
  encode(
    message: QueryNetworkResponse,
    writer: BinaryWriter = BinaryWriter.create()
  ): BinaryWriter {
    if (message.bondRewardRune !== "") {
      writer.uint32(10).string(message.bondRewardRune);
    }
    if (message.totalBondUnits !== "") {
      writer.uint32(18).string(message.totalBondUnits);
    }
    if (message.effectiveSecurityBond !== "") {
      writer.uint32(26).string(message.effectiveSecurityBond);
    }
    if (message.totalReserve !== "") {
      writer.uint32(34).string(message.totalReserve);
    }
    if (message.vaultsMigrating !== false) {
      writer.uint32(40).bool(message.vaultsMigrating);
    }
    if (message.gasSpentRune !== "") {
      writer.uint32(50).string(message.gasSpentRune);
    }
    if (message.gasWithheldRune !== "") {
      writer.uint32(58).string(message.gasWithheldRune);
    }
    if (message.outboundFeeMultiplier !== "") {
      writer.uint32(66).string(message.outboundFeeMultiplier);
    }
    if (message.nativeOutboundFeeRune !== "") {
      writer.uint32(74).string(message.nativeOutboundFeeRune);
    }
    if (message.nativeTxFeeRune !== "") {
      writer.uint32(82).string(message.nativeTxFeeRune);
    }
    if (message.tnsRegisterFeeRune !== "") {
      writer.uint32(90).string(message.tnsRegisterFeeRune);
    }
    if (message.tnsFeePerBlockRune !== "") {
      writer.uint32(98).string(message.tnsFeePerBlockRune);
    }
    if (message.runePriceInTor !== "") {
      writer.uint32(106).string(message.runePriceInTor);
    }
    if (message.torPriceInRune !== "") {
      writer.uint32(114).string(message.torPriceInRune);
    }
    return writer;
  },

  decode(
    input: BinaryReader | Uint8Array,
    length?: number
  ): QueryNetworkResponse {
    const reader =
      input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseQueryNetworkResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.bondRewardRune = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.totalBondUnits = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.effectiveSecurityBond = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.totalReserve = reader.string();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.vaultsMigrating = reader.bool();
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.gasSpentRune = reader.string();
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.gasWithheldRune = reader.string();
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.outboundFeeMultiplier = reader.string();
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.nativeOutboundFeeRune = reader.string();
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.nativeTxFeeRune = reader.string();
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.tnsRegisterFeeRune = reader.string();
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.tnsFeePerBlockRune = reader.string();
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.runePriceInTor = reader.string();
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.torPriceInRune = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): QueryNetworkResponse {
    return {
      bondRewardRune: isSet(object.bondRewardRune)
        ? globalThis.String(object.bondRewardRune)
        : "",
      totalBondUnits: isSet(object.totalBondUnits)
        ? globalThis.String(object.totalBondUnits)
        : "",
      effectiveSecurityBond: isSet(object.effectiveSecurityBond)
        ? globalThis.String(object.effectiveSecurityBond)
        : "",
      totalReserve: isSet(object.totalReserve)
        ? globalThis.String(object.totalReserve)
        : "",
      vaultsMigrating: isSet(object.vaultsMigrating)
        ? globalThis.Boolean(object.vaultsMigrating)
        : false,
      gasSpentRune: isSet(object.gasSpentRune)
        ? globalThis.String(object.gasSpentRune)
        : "",
      gasWithheldRune: isSet(object.gasWithheldRune)
        ? globalThis.String(object.gasWithheldRune)
        : "",
      outboundFeeMultiplier: isSet(object.outboundFeeMultiplier)
        ? globalThis.String(object.outboundFeeMultiplier)
        : "",
      nativeOutboundFeeRune: isSet(object.nativeOutboundFeeRune)
        ? globalThis.String(object.nativeOutboundFeeRune)
        : "",
      nativeTxFeeRune: isSet(object.nativeTxFeeRune)
        ? globalThis.String(object.nativeTxFeeRune)
        : "",
      tnsRegisterFeeRune: isSet(object.tnsRegisterFeeRune)
        ? globalThis.String(object.tnsRegisterFeeRune)
        : "",
      tnsFeePerBlockRune: isSet(object.tnsFeePerBlockRune)
        ? globalThis.String(object.tnsFeePerBlockRune)
        : "",
      runePriceInTor: isSet(object.runePriceInTor)
        ? globalThis.String(object.runePriceInTor)
        : "",
      torPriceInRune: isSet(object.torPriceInRune)
        ? globalThis.String(object.torPriceInRune)
        : "",
    };
  },

  toJSON(message: QueryNetworkResponse): unknown {
    const obj: any = {};
    if (message.bondRewardRune !== "") {
      obj.bondRewardRune = message.bondRewardRune;
    }
    if (message.totalBondUnits !== "") {
      obj.totalBondUnits = message.totalBondUnits;
    }
    if (message.effectiveSecurityBond !== "") {
      obj.effectiveSecurityBond = message.effectiveSecurityBond;
    }
    if (message.totalReserve !== "") {
      obj.totalReserve = message.totalReserve;
    }
    if (message.vaultsMigrating !== false) {
      obj.vaultsMigrating = message.vaultsMigrating;
    }
    if (message.gasSpentRune !== "") {
      obj.gasSpentRune = message.gasSpentRune;
    }
    if (message.gasWithheldRune !== "") {
      obj.gasWithheldRune = message.gasWithheldRune;
    }
    if (message.outboundFeeMultiplier !== "") {
      obj.outboundFeeMultiplier = message.outboundFeeMultiplier;
    }
    if (message.nativeOutboundFeeRune !== "") {
      obj.nativeOutboundFeeRune = message.nativeOutboundFeeRune;
    }
    if (message.nativeTxFeeRune !== "") {
      obj.nativeTxFeeRune = message.nativeTxFeeRune;
    }
    if (message.tnsRegisterFeeRune !== "") {
      obj.tnsRegisterFeeRune = message.tnsRegisterFeeRune;
    }
    if (message.tnsFeePerBlockRune !== "") {
      obj.tnsFeePerBlockRune = message.tnsFeePerBlockRune;
    }
    if (message.runePriceInTor !== "") {
      obj.runePriceInTor = message.runePriceInTor;
    }
    if (message.torPriceInRune !== "") {
      obj.torPriceInRune = message.torPriceInRune;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<QueryNetworkResponse>, I>>(
    base?: I
  ): QueryNetworkResponse {
    return QueryNetworkResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<QueryNetworkResponse>, I>>(
    object: I
  ): QueryNetworkResponse {
    const message = createBaseQueryNetworkResponse();
    message.bondRewardRune = object.bondRewardRune ?? "";
    message.totalBondUnits = object.totalBondUnits ?? "";
    message.effectiveSecurityBond = object.effectiveSecurityBond ?? "";
    message.totalReserve = object.totalReserve ?? "";
    message.vaultsMigrating = object.vaultsMigrating ?? false;
    message.gasSpentRune = object.gasSpentRune ?? "";
    message.gasWithheldRune = object.gasWithheldRune ?? "";
    message.outboundFeeMultiplier = object.outboundFeeMultiplier ?? "";
    message.nativeOutboundFeeRune = object.nativeOutboundFeeRune ?? "";
    message.nativeTxFeeRune = object.nativeTxFeeRune ?? "";
    message.tnsRegisterFeeRune = object.tnsRegisterFeeRune ?? "";
    message.tnsFeePerBlockRune = object.tnsFeePerBlockRune ?? "";
    message.runePriceInTor = object.runePriceInTor ?? "";
    message.torPriceInRune = object.torPriceInRune ?? "";
    return message;
  },
};
